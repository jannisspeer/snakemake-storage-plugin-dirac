name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  PYTHON_VERSION: 3.11

jobs:
  formatting:
    runs-on: ubuntu-latest
    container:
      image: almalinux
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install pip, python and git
        run: |
          dnf update --assumeyes
          dnf install python3-pip --assumeyes
          dnf install git --assumeyes
          dnf install python${{ env.PYTHON_VERSION }} --assumeyes

      - name: Check install
        run: |
          git --version
          pip --version
          python3 --version

      #- name: Install EPEL
      #  run: |
      #    dnf install epel-release --assumeyes

      - name: Prepare install of gfal2-python
        run: |
          git clone --branch v1.12.2 https://github.com/cern-fts/gfal2-python.git
          cd gfal2-python/
          ./ci/fedora-packages.sh
          cd packaging/
          make srpm
          dnf builddep -y gfal2-python-*.src.rpm
          cd

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock
   
      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check formatting
        run: poetry run black --check .

  linting:
    runs-on: ubuntu-latest
    container:
      image: almalinux
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name:  gfal2
        run: pip wheel --no-cache-dir --use-pep517 "gfal2-python (==1.12.2)"

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check code
        run: poetry run flake8

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.16.x'

      - name: GFAL
        run: | 
          sudo apt update
          sudo apt install gfal2
             

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry

      - name: Install dependencies
        run: poetry install

      #- name: Run pytest
      #  run: poetry run coverage run -m pytest tests/tests.py

      #- name: Run Coverage
      #  run: poetry run coverage report -m
